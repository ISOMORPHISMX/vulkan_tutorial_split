cmake_minimum_required(VERSION 3.10)
project(MyProject)

# ... (查找 glslc 编译器) ...
find_program(GLSLC_COMPILER glslc)
if(NOT GLSLC_COMPILER)
  message(FATAL_ERROR "glslc compiler not found")
endif()
message("GLSLC_COMPILER: ${GLSLC_COMPILER}")

# 设置 shader 文件路径
set(SHADER_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set(SHADER_FILES
    ${SHADER_DIR}/09_shader_base.frag
    ${SHADER_DIR}/09_shader_base.vert
)
message("SHADER_FILES: ${SHADER_FILES}")

# ... (创建 build/shader 文件夹) ...
file(MAKE_DIRECTORY build/shader)

# 编译 shader 文件
foreach(SHADER_FILE ${SHADER_FILES})
  get_filename_component(SHADER_NAME ${SHADER_FILE} NAME_WE)
    message("SHADER_NAME: ${SHADER_NAME}")
    message("SHADER_FILE: ${SHADER_FILE}")

  get_filename_component(SHADER_EXT ${SHADER_FILE} EXT)
  add_custom_command(
    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/shader/${SHADER_NAME}_${SHADER_EXT}.spv
    COMMAND ${GLSLC_COMPILER} -o ${CMAKE_CURRENT_BINARY_DIR}/shader/${SHADER_NAME}_${SHADER_EXT}.spv ${SHADER_FILE}
    DEPENDS ${SHADER_FILE}
    COMMENT "Compiling ${SHADER_FILE} to SPIR-V"
  )
  message("输出路径: ${CMAKE_CURRENT_BINARY_DIR}/shader/${SHADER_NAME}_${SHADER_EXT}.spv")
endforeach()

add_custom_target(compile_shaders ALL
  DEPENDS 
    ${CMAKE_CURRENT_BINARY_DIR}/shader/09_shader_base_frag.spv
    ${CMAKE_CURRENT_BINARY_DIR}/shader/09_shader_base_vert.spv
)
add_executable( temp_exe ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp )
# 添加依赖项到 MyExecutable
add_dependencies(temp_exe compile_shaders)